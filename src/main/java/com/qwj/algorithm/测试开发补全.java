/**
 * Copyright (C), 2015-2019
 * FileName: 测试开发补全
 * Author:   qianwenjun
 * Date:     2019/3/23 08:41
 * Description:
 */
package com.qwj.algorithm;

/**
 * 〈〉
 *
 * @author qianwenjun
 * @create 2019/3/23
 * @since 1.0.0
 */
public class 测试开发补全 {

//    1. 在符串中找出连续最长的数字串，并把这个串的长度返回，譬如“abcdabce" 最长串为abcd或者abce，长度为4
//    2.上楼梯每次只能一步或者两步，有多少走法，这个主要是递归，列出来其实很简单，当时没想起来
//    2.java类的题目是字符串数组排序，譬如 a[] = {"sbg","dyh","yhjjjj"},进行排序
//    1. 实现链表的逆序（反转），解释思路，写代码
//      注意：考察有两点，一个是对实现思路的考察，一个是对特殊输入的考察，严谨性
//      2. 如何判断一个链表是环形链表，解释思路，写代码
//      3. 给定二叉树的先序遍历及中序遍历，请写出中这颗二叉树的后序遍历结果，并解释思路
//      4. 链表的增删改查
//      5. 手写快速排序算法，并设计测试用例
//      6. 字符串反转
//      7. 二叉树反序列化
//      8. 二叉树的中序遍历，递归实现和非递归实现
//        根据中序遍历的顺序，对于任一结点，优先访问其左孩子，而左孩子结点又可以看做一根结点，然后继续访问其左孩子结点，直到遇到左孩子结点为空的结点才进行访问，然后按相同的规则访问其右子树。因此其处理过程如下：(1)若其左孩子不为空，则将P入栈并将P的左孩子置为当前的P，然后对当前结点P再进行相同的处理；(2)若其左孩子为空，则取栈顶元素并进行出栈操作，访问该栈顶结点，然后将当前的P置为栈顶结点的右孩子；(3)直到P为NULL并且栈为空则遍历结束
//      9. strcpy函数，编写测试用例
//     https://zhidao.baidu.com/question/1769577048176015260.html
//                 10. 找出三位数中各个位的平方和等于原来数大小的数字，编写测试用例
//     11. 找出一个数组中和为m的所有可能组合？
//                 12. 洗牌，如何保证每张牌经过洗牌后，不在现在的位置上
//     13. 给出两个API getChilds()、getFather()求多叉树第n层节点数？
//                 14. 写双向链表插入删除？
//                 15. 二叉树怎么分层遍历每一层节点？
//                16.统计一个文件中每个单词的出现次数
//    17、如果给你bca你怎么可以判断bca可以由abc推断出。时间复杂度更小
//    18、遍历list的元素，删除其中两个



    //exam1-------------
    //数组比较，求最小值
    //数组比较，求第3个最小值
    //第k个最小值
    //反转数字（反转的两种解法：换成数组，前后对换；转成StringBuilder，使用reveser方法）
    //反转字符串
    //判断字符串是否是回文
    //判断一个数字是否是回文
    //字符串倒转，以空格为间隔，倒转一句字符串内容
    //exam2-------------
    //53 给一个整数数组，查找一个具有最大和的子数组并返回这个最大和
    //合并两个已排序的数组
    //查询子串在给定字符串的起始位置，并返回。如果不匹配返回-1；
    //exam3-------------
    //136 给定一个整数数组，其中除了一个元素出现一次，其余都出现两次，找出这个元素
    //169 给定一个大小为n的数组，有个元素出现次数不小于n/2，找出这个元素.即是众数
    //数组的循环右移(解法1：普通右移；解法2：三次反转；都需要注意起始位置)
    //exam9-------------
    //415 两个大字符串数字之和----(字符串假如都是数字，不包含特殊符号或字母)
    //解法：1、位数较小的补全；2、定义长度n+1的数组，每位换成整数依次相加放入数组；3、放入规则，%10余数放低位，/10高位放前一位
    //exam13-------------
    //633 给定一个非负整数，判断是否可表示为 a^2 + b^2 的形式
    //exam15-------------
    //747 查找数组中最大元素是否大于其他所有元素的两倍
    //解法1：存储最大和次大（只与这两个有关）;只要最大的比次大的两倍还要大，就满足这个条件
    //exam20-------------
    //961 给定一个2N长度的数组，包含N+1个不同的元素，其实一个元素重复N次，找出这个元素
    //exam_add-------------
    //数组里，是否有任意两个数的合为指定的值
    //判断一个数是否为素数
    //判断值是否是3的n次方的形式，1*3*3*3，所以先对3取余，若等于0，继续处于3循环，若取余不等于0，判断是否等于1，否则不是3的n次方
    //判断x是否可以由a*a+b*b的形式。循环的次数为sqrt(x)
    //exam_find-------------
    //二分查找
    //exam_sort-------------
    //冒泡排序
    //快速排序





}